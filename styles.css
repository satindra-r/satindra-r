body {
	font-family: 'JetBrains Mono';
	margin:0;
	background-color:#111111;
	overflow-x:hidden
}
.grid{
	display:grid;
	@media only screen and (orientation: landscape) {
		grid-template-rows:100vh 100vh 100vh 100vh;
		grid-template-columns: 50vw 50vw;
	}
	@media only screen and (orientation: portrait) {
		grid-template-rows:100vh 100vh 100vh 100vh 100vh;
		grid-template-columns: 100vw;
	}
}

.pane{
	position:sticky;
	bottom:0;
	background-image: linear-gradient(#111111 75%, #222222 100%);
	color:#eeeeee;
	display:flex;
	flex-direction:column;
	flex-wrap:nowrap;
	@media only screen and (orientation: landscape) {
		width:50vw;
	}
	@media only screen and (orientation: portrait) {
		width:100vw;
	}
	filter: drop-shadow(0vh 1vh 1vh black);
}
.pane1{
	@media only screen and (orientation: landscape) {
		grid-row:1;
		grid-column:1;
	}
	@media only screen and (orientation: portrait) {
		grid-row:1;
		grid-column:1;
	}
}
.pane2{
	@media only screen and (orientation: landscape) {
		grid-row:2;
		grid-column:2;
	}
	@media only screen and (orientation: portrait) {
		grid-row:2;
		grid-column:1;
	}
}
.pane3{
	@media only screen and (orientation: landscape) {
		grid-row:3;
		grid-column:1;
	}
	@media only screen and (orientation: portrait) {
		grid-row:3;
		grid-column:1;
	}
}
.pane4{
	@media only screen and (orientation: landscape) {
		grid-row:4;
		grid-column:2;
	}
	@media only screen and (orientation: portrait) {
		grid-row:4;
		grid-column:1;
	}
}
.pane5{
	@media only screen and (orientation: landscape) {
		grid-row:4;
		grid-column:1;
	}
	@media only screen and (orientation: portrait) {
		grid-row:5;
		grid-column:1;
	}
}
.sheep{
	display: block;
	@media only screen and (orientation: landscape) {
		margin-left: 10vw;
		margin-right: 10vw;
		width: 20vw;
	}
	@media only screen and (orientation: portrait) {
		margin-left: 20vw;
		margin-right: 40vw;
		width: 40vw;
	}
}
.expflexbox{
	display:flex;
	flex-direction: column;
	justify-content: space-evenly;
	height:80vh;
}
.expbox{
	display:flex;
	@media only screen and (orientation: landscape) {
		width: 45vh;
		height: 15vh;
		margin-left:calc((50vw - 45vh)/2);
	}
	@media only screen and (orientation: portrait) {
		width: 80vw;
		height: 30vw;
		margin-left:10vw;
	}
	perspective:100vw;
}
.expboxpicbg{
	position:relative;
	@media only screen and (orientation: landscape) {
		width: 15vh;
		height: 15vh;
	}
	@media only screen and (orientation: portrait) {
		width: 30vw;
		height: 30vw;
	}
	z-index:1;
	background-color:#171717;
	transform:translateZ(0vmin);
	transition-duration:1.5s;
}
.expboxpic{
	position:relative;
	@media only screen and (orientation: landscape) {
		width: 15vh;
		height: 15vh;
	}
	@media only screen and (orientation: portrait) {
		width: 30vw;
		height: 30vw;
	}
	z-index:1;
	transition-duration:1.5s;
}
.textbox{
	position:relative;
	background-color:#171717;
	@media only screen and (orientation: landscape) {
		width: 30vh;
	}
	@media only screen and (orientation: portrait) {
		width: 50vw;
	}
	transition-duration:1.5s;

}
.lefttextbox{
	left:0;
	transform-origin:left;
	@media only screen and (orientation: landscape) {
		transform:translateX(-15vh) scaleX(0.5);
	}
	@media only screen and (orientation: portrait) {
		transform:translateX(-30vw) scaleX(0.6);
	}
}
.righttextbox{
	right:0;
	transform-origin:right;
	@media only screen and (orientation: landscape) {
		transform:translateX(15vh) scaleX(0.5);
	}
	@media only screen and (orientation: portrait) {
		transform:translateX(30vw) scaleX(0.6);
	}
}
.expbox:hover .expboxpic{
	transform:translateZ(5vh);
	transition-duration:0.5s;
}
.expbox:hover .textbox{
	transform:translateX(0) scaleX(1);
	transition-duration:0.5s;
}
.expboxtext{
	@media only screen and (orientation: landscape) {
		padding:2vh;
		font-size:1.75vh;
		width:28vh;
	}
	@media only screen and (orientation: portrait) {
		padding:3vw;
		font-size:3.5vw;
		width:44vw;
	}
}
.expbox:hover .javapic{
	filter: drop-shadow(1vh 1vh 1vh #2d75ba);
}
.expbox:hover  .pypic{
	filter: drop-shadow(1vh 1vh 1vh #ffe777);
}
.expbox:hover  .cspic{
	filter: drop-shadow(1vh 1vh 1vh #a179dc);
}
.expbox:hover  .cpppic{
	filter: drop-shadow(1vh 1vh 1vh #5c8ebd);
}
.dblprojbox{
	display:grid;
	@media only screen and (orientation: landscape) {
		grid-template-rows:auto auto;
		grid-template-columns: 25vw 25vw;
	}
	@media only screen and (orientation: portrait) {
		grid-template-rows:auto auto;
		grid-template-columns: 50vw 50vw;
	}
}
.proj{
	display:flex;
	flex-direction: column;
	height:70vh;
	justify-content:space-evenly;

}
.projboxcontainer{
	display:flex;
	position:relative;
	align-self: center;
	@media only screen and (orientation: landscape) {
		height:calc(5vh+4vw);
		width: 19vw;
	}
	@media only screen and (orientation: portrait) {
		height:calc(5vh+4vw);
		width:44vw;
	}
	font-size:2.5vh;
	align-items: center;
	justify-content: center;
	transform-origin:center;
	transition-duration: 0.25s;
}
.projbox{
	display:flex;
	position:relative;
	align-self: center;
	text-decoration: none;	
	background-image: linear-gradient(#101010 0%,#1c1c1c 50%,#101010  100%);
	@media only screen and (orientation: landscape) {
		height:5vh;
		width: 15vw;
	}
	@media only screen and (orientation: portrait) {
		height:5vh;
		width:40vw;
	}
	padding:2vw;
	filter: drop-shadow(1vh 1vh 1vh black);
	font-size:2.5vh;
	align-items: center;
	justify-content: center;
	transition-duration: 0.25s;
}
.projboxcontainer:hover .projbox{
	transform: rotateX(360deg);
	z-index:1;
	transition-duration: 0.25s;
}
.projboxcontainer:hover .projbox span{
	display: none;
}
.projboxcontainer:hover .projbox:before{
	font-size:2vh;
	text-align: center;
}
.projboxcontainer:hover .p1:before{
	content:"Fractal generation by chaos game";
}
.projboxcontainer:hover .p2:before{
	content:"An esolang where all code is in the form of ipv6 adresses";
}
.projboxcontainer:hover .p3:before{
	content:"Bouncing DVD animation that only hits the corner when you are not looking";
}
.projboxcontainer:hover .p4:before{
	content:"Image to braille art converter";
}
.projboxcontainer:hover .p5:before{
	content:"Particle based two fluid mixing simulator";
}
.projboxcontainer:hover .p6:before{
	content:"Firefly blinking synchronisation simulator";
}
.projboxcontainer:hover .p7:before{
	content:"Neuron-like animation";
}
.projboxcontainer:hover .p8:before{
	content:"Iterative Sorting algorithm simulator";
}
.projboxcontainer:hover .p9:before{
	content:"Real time photo sharing app";
}
.projboxcontainer:hover .p10:before{
	content:"Website made in only HTML and CSS";
}
.projboxcontainer:active .projbox{
	transform:scale(0.9);
	transition-duration: 0.25s;
}
.heading{
	padding:5vh;
	font-size: 5vh;
}
.text{
	padding:4vmin;
	font-size: 3vh;
	@media only screen and (orientation: landscape) {
		max-width:40vw; 	
		max-height:80vh;
	}
	@media only screen and (orientation: portrait) {
		max-width:90vw;
		max-height:80vh;
	}
	
}
.ico{
	width:5vh;
	height:5vh;
	filter: drop-shadow( white);
}
.title{
	display:flex;
	justify-content: center;
}
.aligned{
	display: flex;
	align-items:center;
	text-decoration: none;
}
.link{
	color:#2d75ba;
}